#!/bin/bash

#########################################################################################
#components default version
#########################################################################################
GRAFANA_DEFAULT_VERSION=6.0.2
PROMETHEUS_DEFAULT_VERSION=v2.8.1
PROMETHEUS_OPERATOR_DEFAULT_VERSION=v0.29.0
PROMETHEUS_STORAGE_DEFAULT_RETENTION={{ prometheus_retention_time }}
PROMETHEUS_STORAGE_DEFAULT_VOLUME_SIZE={{ prometheus_retention_size }}
PROMETHEUS_DEFAULT_MEMORY_LIMIT=8Gi
ALERTMANAGER_DEFAULT_VERSION=v0.16.1
NODE_EXPORTER_DEFAULT_VERSION=v0.17.0
KUBE_STATE_METRICS_DEFAULT_VERSION=v1.5.0
NODE_LABEL_DEFAULT_KEY=kubernetes.io/role
NODE_LABEL_DEFAULT_VALUE=master
DEFAULT_NAMESPACE=monitoring
DOCOKER_REGISTRY={{ base_image_addr }}

#########################################################################################
#external Urls for Prometheus and Alertmanager
#########################################################################################
PROMETHEUS_DEFAULT_EXTERNAL_URL=http://127.0.0.1:9090
ALERTMANAGER_DEFAULT_EXTERNAL_URL=http://127.0.0.1:9093

#########################################################################################
#environment configuration
#########################################################################################
RED='\033[0;31m'
GREEN='\033[0;32m'
ORANGE='\033[0;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
GREEN_PS3=$'\e[0;32m'
ORANGE_PS3=$'\e[0;33m'
WHITE='\033[0;37m'

KUBECONFIG_DIR=$1
export KUBECONFIG=$KUBECONFIG_DIR/config

#Namespace
NAMESPACE=${NAMESPACE:-$DEFAULT_NAMESPACE}

echo -e "${BLUE}Creating ${ORANGE}${NAMESPACE} ${BLUE}namespace."
kubectl create namespace "$NAMESPACE"

#Set namespace in various resources
for n in $(egrep -lir --include=*.{yaml,sh} "CUSTOM_NAMESPACE" .); do
  sed -i -e 's,CUSTOM_NAMESPACE,'"$NAMESPACE"',g' $n
done

#Set registry for all images
for n in $(egrep -lir --include=*.{yaml,sh} "DOCOKER_REGISTRY" .); do
  sed -i -e 's,DOCOKER_REGISTRY,'"$DOCOKER_REGISTRY"',g' $n
done


kctl() {
    kubectl --namespace "$NAMESPACE" "$@"
}

#PERSIST STORAGE SET
STORAGE_CLASS_PROVISIONER=kubernetes.io/no-provisioner
STORAGE_CLASS_TYPE=prometheus-storage
echo "Deploying on local persistence storage"
sed -i -e 's,STORAGE_CLASS_PROVISIONER,'"$STORAGE_CLASS_PROVISIONER"',g' manifests/prometheus/prometheus-k8s.yaml;
sed -i -e 's,STORAGE_CLASS_TYPE,'"$STORAGE_CLASS_TYPE"',g' manifests/prometheus/prometheus-k8s.yaml;
sed -i -e 's,STORAGE_CLASS_TYPE,'"grafana-storage"',g' manifests/grafana/grafana.pvc.yaml;

###########################################################################################
#set components version
###########################################################################################

#Prometheus Operator
PROMETHEUS_OPERATOR_VERSION=${PROMETHEUS_OPERATOR_VERSION:-$PROMETHEUS_OPERATOR_DEFAULT_VERSION}

#Prometheus
PROMETHEUS_VERSION=${PROMETHEUS_VERSION:-$PROMETHEUS_DEFAULT_VERSION}

#Prometheus Storage Retention
PROMETHEUS_STORAGE_RETENTION=${PROMETHEUS_STORAGE_RETENTION:-$PROMETHEUS_STORAGE_DEFAULT_RETENTION}

#Prometheus Storage Volume Size
PROMETHEUS_STORAGE_VOLUME_SIZE=${PROMETHEUS_STORAGE_VOLUME_SIZE:-$PROMETHEUS_STORAGE_DEFAULT_VOLUME_SIZE}

#Prometheus Memory Request
PROMETHEUS_MEMORY_LIMIT=${PROMETHEUS_MEMORY_LIMIT:-$PROMETHEUS_DEFAULT_MEMORY_LIMIT}

#Grafana
GRAFANA_VERSION=${GRAFANA_VERSION:-$GRAFANA_DEFAULT_VERSION}

#Alertmanager
ALERTMANAGER_VERSION=${ALERTMANAGER_VERSION:-$ALERTMANAGER_DEFAULT_VERSION}

#Node Exporter
NODE_EXPORTER_VERSION=${NODE_EXPORTER_VERSION:-$NODE_EXPORTER_DEFAULT_VERSION}

#Kube State Metrics
KUBE_STATE_METRICS_VERSION=${KUBE_STATE_METRICS_VERSION:-$KUBE_STATE_METRICS_DEFAULT_VERSION}

#Prometheus External URL
PROMETHEUS_EXTERNAL_URL=${PROMETHEUS_EXTERNAL_URL:-$PROMETHEUS_DEFAULT_EXTERNAL_URL}

#Alertmanager External URL
ALERTMANAGER_EXTERNAL_URL=${ALERTMANAGER_EXTERNAL_URL:-$ALERTMANAGER_DEFAULT_EXTERNAL_URL}

NODE_LABEL_KEY=${NODE_LABEL_KEY:-$NODE_LABEL_DEFAULT_KEY}
NODE_LABEL_VALUE=${NODE_LABEL_VALUE:-$NODE_LABEL_DEFAULT_VALUE}

sed -i -e 's,node_label_key,'"$NODE_LABEL_KEY"',g' manifests/alertmanager/alertmanager.yaml
sed -i -e 's,node_label_value,'"$NODE_LABEL_VALUE"',g' manifests/alertmanager/alertmanager.yaml

sed -i -e 's,node_label_key,'"$NODE_LABEL_KEY"',g' manifests/grafana/grafana.de.yaml
sed -i -e 's,node_label_value,'"$NODE_LABEL_VALUE"',g' manifests/grafana/grafana.de.yaml

sed -i -e 's,node_label_key,'"$NODE_LABEL_KEY"',g' manifests/kube-state-metrics/kube-state-metrics.de.yaml
sed -i -e 's,node_label_value,'"$NODE_LABEL_VALUE"',g' manifests/kube-state-metrics/kube-state-metrics.de.yaml

sed -i -e 's,node_label_key,'"$NODE_LABEL_KEY"',g' manifests/prometheus/prometheus-k8s.yaml
sed -i -e 's,node_label_value,'"$NODE_LABEL_VALUE"',g' manifests/prometheus/prometheus-k8s.yaml

sed -i -e 's,node_label_key,'"$NODE_LABEL_KEY"',g' manifests/prometheus-operator/prometheus-operator.yaml
sed -i -e 's,node_label_value,'"$NODE_LABEL_VALUE"',g' manifests/prometheus-operator/prometheus-operator.yaml

#
#sed -i -e '/node_label_key/d' manifests/alertmanager/alertmanager.yaml
#sed -i -e '/nodeSelector:/d' manifests/alertmanager/alertmanager.yaml
#sed -i -e '/node_label_key/d' manifests/grafana/grafana.de.yaml
#sed -i -e '/node_label_key/d' manifests/kube-state-metrics/kube-state-metrics.de.yaml
#sed -i -e '/node_label_key/d' manifests/prometheus/prometheus-k8s.yaml
#sed -i -e '/nodeSelector:/d' manifests/prometheus/prometheus-k8s.yaml
#sed -i -e '/node_label_key/d' manifests/prometheus-operator/prometheus-operator.yaml
#

#set prometheus operator version
sed -i -e 's/PROMETHEUS_OPERATOR_VERSION/'"$PROMETHEUS_OPERATOR_VERSION"'/g' manifests/prometheus-operator/prometheus-operator.yaml

#set prometheus version
sed -i -e 's/PROMETHEUS_VERSION/'"$PROMETHEUS_VERSION"'/g' manifests/prometheus/prometheus-k8s.yaml

#set prometheus storage retention
sed -i -e 's/PROMETHEUS_STORAGE_RETENTION/'"$PROMETHEUS_STORAGE_RETENTION"'/g' manifests/prometheus/prometheus-k8s.yaml

#set prometheus storage volume size
sed -i -e 's/PROMETHEUS_STORAGE_VOLUME_SIZE/'"$PROMETHEUS_STORAGE_VOLUME_SIZE"'/g' manifests/prometheus/prometheus-k8s.yaml

#set prometheus memory request
sed -i -e 's/PROMETHEUS_MEMORY_LIMIT/'"$PROMETHEUS_MEMORY_LIMIT"'/g' manifests/prometheus/prometheus-k8s.yaml

#set grafana version
sed -i -e 's/GRAFANA_VERSION/'"$GRAFANA_VERSION"'/g' manifests/grafana/grafana.de.yaml

#set alertmanager version
sed -i -e 's/ALERTMANAGER_VERSION/'"$ALERTMANAGER_VERSION"'/g' manifests/alertmanager/alertmanager.yaml

#set node-exporter version
sed -i -e 's/NODE_EXPORTER_VERSION/'"$NODE_EXPORTER_VERSION"'/g' manifests/node-exporter/node-exporter.ds.yaml

#set node-exporter version
sed -i -e 's/KUBE_STATE_METRICS_VERSION/'"$KUBE_STATE_METRICS_VERSION"'/g' manifests/kube-state-metrics/kube-state-metrics.de.yaml

#set prometheus external url
sed -i -e 's,PROMETHEUS_EXTERNAL_URL,'"$PROMETHEUS_EXTERNAL_URL"',g' manifests/prometheus/prometheus-k8s.yaml

#set alertmanager external url
sed -i -e 's,ALERTMANAGER_EXTERNAL_URL,'"$ALERTMANAGER_EXTERNAL_URL"',g' manifests/alertmanager/alertmanager.yaml

##########################################################################################################################################
#configure alert channels
##########################################################################################################################################
#SMTP
echo
echo -e "${BLUE}Do you want to set up an SMTP relay?"
tput sgr0
#read -p "Y/N [N]: " use_smtp

#if so, fill out this form...
if [[ "{{ alert_email }}" == "True" ]]; then
  #smtp smarthost
  smtp_smarthost={{ smtp_host }}
  #smtp from address
  #read -p "SMTP from (user@domain.com): " 
  smtp_from={{ smtp_from }}
  #smtp to address
  #read -p "Email address to send alerts to (user@domain.com): " 
  alert_email_address={{ alert_email_address }}
  #smtp username
  #read -p "SMTP auth username: " 
  smtp_user={{ smtp_user }}
  #smtp password
  smtp_password={{ smtp_password }}

  smtp_require_tls={{ smtp_require_tls }}

  #update configmap with SMTP relay info
  sed -i -e 's/your_smtp_smarthost/'"$smtp_smarthost"'/g' assets/alertmanager/alertmanager.yaml
  sed -i -e 's/your_smtp_from/'"$smtp_from"'/g' assets/alertmanager/alertmanager.yaml
  sed -i -e 's/your_smtp_user/'"$smtp_user"'/g' assets/alertmanager/alertmanager.yaml
  sed -i -e 's,your_smtp_pass,'"$smtp_password"',g' assets/alertmanager/alertmanager.yaml
  sed -i -e 's/your_alert_email_address/'"$alert_email_address"'/g' assets/alertmanager/alertmanager.yaml
  sed -i -e 's/your_smtp_require_tls/'"$smtp_require_tls"'/g' assets/alertmanager/alertmanager.yaml
else
  smtp_require_tls=false
  sed -i -e 's/your_smtp_require_tls/'"$smtp_require_tls"'/g' assets/alertmanager/alertmanager.yaml
fi

echo
echo -e "${BLUE}Removing all the sed generated files"
find . -name "*.yaml-e" -exec rm -rf {} \;
tput sgr0
######################################################################################################
#deploy all the components
######################################################################################################

#prometheus-operator
echo
echo -e "${ORANGE}Deploying Prometheus Operator"
tput sgr0
kctl apply -f manifests/prometheus-operator

printf "${ORANGE}Waiting for Operator to register custom resource definitions..."
tput sgr0
until kctl get customresourcedefinitions servicemonitors.monitoring.coreos.com > /dev/null 2>&1; do sleep 1; printf "."; done
until kctl get customresourcedefinitions prometheuses.monitoring.coreos.com > /dev/null 2>&1; do sleep 1; printf "."; done
until kctl get customresourcedefinitions alertmanagers.monitoring.coreos.com > /dev/null 2>&1; do sleep 1; printf "."; done
until kctl get servicemonitors.monitoring.coreos.com > /dev/null 2>&1; do sleep 1; printf "."; done
until kctl get prometheuses.monitoring.coreos.com > /dev/null 2>&1; do sleep 1; printf "."; done
until kctl get alertmanagers.monitoring.coreos.com > /dev/null 2>&1; do sleep 1; printf "."; done
until kctl get prometheusrules.monitoring.coreos.com > /dev/null 2>&1; do sleep 1; printf "."; done
echo "done!"

#alertmanager
echo
echo -e "${ORANGE}Deploying Alertmanager"
tput sgr0
(cd ./scripts; chmod +x *; ./generate-alertmanager-config-secret.sh)
kctl apply -f manifests/alertmanager

#prometheus node-exporter
echo
echo -e "${ORANGE}Deploying node-exporter"
tput sgr0
kctl apply -f manifests/node-exporter

#kube-state-metrics
echo
echo -e "${ORANGE}Deploying Kube State Metrics exporter"
tput sgr0
kctl apply -f manifests/kube-state-metrics
echo

#grafana
echo
echo -e "${ORANGE}Deploying Grafana"
tput sgr0

kctl apply -f manifests/grafana

echo
echo -e "${ORANGE}Grafana default credentials"
echo -e "${WHITE}user: ${ORANGE}admin, ${WHITE}password: ${ORANGE}admin"
tput sgr0

#prometheus
echo
echo -e "${ORANGE}Deploying Prometheus"
tput sgr0

#deploy prometheus
kubectl apply -f manifests/prometheus/prometheus-k8s-rbac.yaml
find manifests/prometheus -type f -not -path "*self-hosted/*" -type f ! -name prometheus-k8s-rbac.yaml -exec kubectl --namespace "$NAMESPACE" apply -f {} \;

#self-hosted
kubectl apply -f manifests/self-hosted/

echo -e "${GREEN}Done"
tput sgr0
